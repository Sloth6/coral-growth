#!/usr/bin/env python3
from __future__ import division, print_function

import time
import random
import os, sys

sys.path.append(os.path.abspath('..'))
random.seed(123)
import MultiNEAT as NEAT
from plant_growth.plant import Plant
from plant_growth.simulate import simulate_network

time_steps = 20

class NetworkDummy(object):
    def Input(self, input):
        self.input = input

    def ActivateFast(self):
        pass

    def Flush(self):
        pass

    def Output(self):
        out = [0] * Plant.num_outputs
        out[0] = random.random()
        return out

world_configs = [
    {
        'max_cells': 5000,
        'growth_scalar': .25,
        'max_angle': .98 * 2 * 3.14159,
        'max_face_growth': 2.0,
    }
]

start = time.time()
net = NEAT.NeuralNetwork()
simulate_network(time_steps, NetworkDummy(), world_configs, verbose=True)
print('finished in', time.time() - start)
