#!/usr/bin/env python3
import os, sys, re
import shutil
sys.path.append(os.path.abspath('..'))

from plant_growth import constants
from plant_growth.pygameDraw import PygameDraw
from plant_growth.plot import plot
from plant_growth.evaluate import evaluate

import MultiNEAT as NEAT
from subprocess import call
from tempfile import TemporaryDirectory


if __name__ == '__main__':
    assert(len(sys.argv) == 2)
    dirname = sys.argv[1]
    assert os.path.isdir(dirname)

    view = PygameDraw(constants.WORLD_WIDTH, constants.WORLD_HEIGHT)
    frame = 0

    networks_re = re.compile('best_(\d*)$')

    networks = []

    for name in os.listdir(dirname):
        match = networks_re.match(name)
        if match:
            gen = int(match.groups()[0])
            networks.append((gen, os.path.join(dirname, name)))

    # Sort in-place in increasing order
    networks.sort()

    with TemporaryDirectory() as  temp_dir:
        print('Created temp directory.')

        for gen, file_path in networks:
            # Display_func is only passed world object so pass rest with closure.
            def display_func(world):
                global frame
                frame_path = os.path.join(temp_dir, '{:05d}.png'.format(frame))
                plot(view, world, title='Generation %i'%gen)
                view.save(frame_path)
                frame += 1

            def copy_frames(n=20):
                global frame
                src = os.path.join(temp_dir, '{:05d}.png'.format(frame-1))
                for _ in range(n):
                    dst = os.path.join(temp_dir, '{:05d}.png'.format(frame))
                    frame += 1
                    shutil.copy(src, dst)

            genome = NEAT.Genome(file_path)
            print('Loaded', file_path)
            print('Generating images...')
            evaluate(genome, display=display_func)
            copy_frames(40)

        print('Finished generating images.')
        print('Generating movie...')
        call("ffmpeg -r 30 -f image2 -i "+temp_dir+"/%05d.png "+dirname+"mov.mp4", shell=True)
        print('Finished generating movie.')
